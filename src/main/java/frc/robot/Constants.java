// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot;

/**
 * The Constants class provides a convenient place for teams to hold robot-wide
 * numerical or boolean constants. This class should not be used for any other
 * purpose. All constants should be declared globally (i.e. public static). Do
 * not put anything functional in this class.
 *
 * <p>
 * It is advised to statically import this class (or one of its inner classes)
 * wherever the constants are needed, to reduce verbosity.
 */
public class Constants 
{
    public static final class DrivetrainConstants
    {
        public static final double VELOCITY_LIMIT_PERCENTAGE = 0.5;
        public static final double CLOSED_LOOP_RAMP = 0.5;
        public static final double VELOCITY_SLOWDOWN_MODIFIER = 0.5;
        public static final double MAX_VELOCITY = 1.0d;
        public static final double L_DEADBAND = .15d;
        public static final double R_DEADBAND = .15d;

        //PID configuration constants
        public static final int PID_SLOT_ID = 0;
        public static final int ENCODER_CONFIG_TIMEOUT_MS = 4000;
        public static final int PID_CONFIG_TIMEOUT_MS = 10;
        public static final double KF = 3.996d;
        public static final double KP = 34.1d;
        public static final double KI = 0.0d;
        public static final double KD = 0.0d;

        // MISC Constants
        public static final double WHEEL_CIRCUMFERENCE_FEET = (3.0d/12.0d)*Math.PI; // Wheel diameter 3 in, converting to feet
        public static final double SECONDS_TO_DECISEC = 1.0d/10.0d;
        public static final int GEARBOX_RATIO_TO_ONE = 20;
        public static final int ENCODER_COUNTS_PER_REVOLUTION = 28;
        public static final int ENCODER_EDGES_PER_STEP =  4; 
        public static final int ENCODER_UNITS_PER_REVOLUTION = ENCODER_COUNTS_PER_REVOLUTION; // Edges per Rotation
        public static final double TRACK_WIDTH_FEET = 13.0d/12.0d; //Track width is 13 inches
    }

    public static final class SmoothControlConstants
    {
        public static final double K1 = 1.0d;
        public static final double K2 = 3.0d;
    }

    public static final class AutonomousCommandConstants
    {
        public static final double TARGET_WITHIN_RANGE_FEET = DrivetrainConstants.TRACK_WIDTH_FEET/4.0d; //Half track width
        public static final double STARTING_X = 0.0d;
        public static final double STARTING_Y = 0.0d;
        public static final double STARTING_HEADING = Math.toRadians(0.0d);
    }
}

